# -*- coding: utf-8 -*-

################################################################################
## Form generated from reading UI file 'home.ui'
##
## Created by: Qt User Interface Compiler version 6.1.3
##
## WARNING! All changes made in this file will be lost when recompiling UI file!
################################################################################

from PySide6.QtCore import *  # type: ignore
from PySide6.QtGui import *  # type: ignore
from PySide6.QtWidgets import *  # type: ignore

from src import resource

class Ui_HomeWindow(object):
    def setupUi(self, HomeWindow):
        if not HomeWindow.objectName():
            HomeWindow.setObjectName(u"HomeWindow")
        HomeWindow.setWindowModality(Qt.WindowModal)
        HomeWindow.resize(1100, 600)
        sizePolicy = QSizePolicy(QSizePolicy.Fixed, QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(HomeWindow.sizePolicy().hasHeightForWidth())
        HomeWindow.setSizePolicy(sizePolicy)
        font = QFont()
        font.setPointSize(10)
        HomeWindow.setFont(font)
        icon = QIcon()
        icon.addFile(u":/icons/expense_tracker_sm.png", QSize(), QIcon.Normal, QIcon.Off)
        HomeWindow.setWindowIcon(icon)
        HomeWindow.setStyleSheet(u"background-color: rgb(211, 215, 207);")
        self.action_Exit = QAction(HomeWindow)
        self.action_Exit.setObjectName(u"action_Exit")
        icon1 = QIcon()
        icon1.addFile(u":/icons/icons/exit.png", QSize(), QIcon.Normal, QIcon.Off)
        self.action_Exit.setIcon(icon1)
        font1 = QFont()
        self.action_Exit.setFont(font1)
        self.action_Add_Account = QAction(HomeWindow)
        self.action_Add_Account.setObjectName(u"action_Add_Account")
        icon2 = QIcon()
        icon2.addFile(u":/icons/icons/add.png", QSize(), QIcon.Normal, QIcon.Off)
        self.action_Add_Account.setIcon(icon2)
        self.action_Add_Account.setFont(font1)
        self.action_Edit_Account = QAction(HomeWindow)
        self.action_Edit_Account.setObjectName(u"action_Edit_Account")
        icon3 = QIcon()
        icon3.addFile(u":/icons/icons/edit.png", QSize(), QIcon.Normal, QIcon.Off)
        self.action_Edit_Account.setIcon(icon3)
        self.action_Edit_Account.setFont(font1)
        self.action_View_Account = QAction(HomeWindow)
        self.action_View_Account.setObjectName(u"action_View_Account")
        icon4 = QIcon()
        icon4.addFile(u":/icons/icons/view.png", QSize(), QIcon.Normal, QIcon.Off)
        self.action_View_Account.setIcon(icon4)
        self.action_View_Account.setFont(font1)
        self.action_Delete_Account = QAction(HomeWindow)
        self.action_Delete_Account.setObjectName(u"action_Delete_Account")
        icon5 = QIcon()
        icon5.addFile(u":/icons/icons/delete.png", QSize(), QIcon.Normal, QIcon.Off)
        self.action_Delete_Account.setIcon(icon5)
        self.action_Delete_Account.setFont(font1)
        self.action_Add_Head = QAction(HomeWindow)
        self.action_Add_Head.setObjectName(u"action_Add_Head")
        self.action_Add_Head.setIcon(icon2)
        self.action_Add_Head.setFont(font1)
        self.action_Edit_Head = QAction(HomeWindow)
        self.action_Edit_Head.setObjectName(u"action_Edit_Head")
        self.action_Edit_Head.setIcon(icon3)
        self.action_Edit_Head.setFont(font1)
        self.action_View_Head = QAction(HomeWindow)
        self.action_View_Head.setObjectName(u"action_View_Head")
        self.action_View_Head.setIcon(icon4)
        self.action_View_Head.setFont(font1)
        self.action_Delete_Head = QAction(HomeWindow)
        self.action_Delete_Head.setObjectName(u"action_Delete_Head")
        self.action_Delete_Head.setIcon(icon5)
        self.action_Delete_Head.setFont(font1)
        self.action_Add_Transaction = QAction(HomeWindow)
        self.action_Add_Transaction.setObjectName(u"action_Add_Transaction")
        self.action_Add_Transaction.setIcon(icon2)
        self.action_Add_Transaction.setFont(font1)
        self.action_Edit_Transaction = QAction(HomeWindow)
        self.action_Edit_Transaction.setObjectName(u"action_Edit_Transaction")
        self.action_Edit_Transaction.setIcon(icon3)
        self.action_Edit_Transaction.setFont(font1)
        self.action_View_Transaction = QAction(HomeWindow)
        self.action_View_Transaction.setObjectName(u"action_View_Transaction")
        self.action_View_Transaction.setIcon(icon4)
        self.action_View_Transaction.setFont(font1)
        self.action_Change_Password = QAction(HomeWindow)
        self.action_Change_Password.setObjectName(u"action_Change_Password")
        icon6 = QIcon()
        icon6.addFile(u":/icons/icons/password.png", QSize(), QIcon.Normal, QIcon.Off)
        self.action_Change_Password.setIcon(icon6)
        self.action_Change_Password.setFont(font1)
        self.action_Print_Transaction = QAction(HomeWindow)
        self.action_Print_Transaction.setObjectName(u"action_Print_Transaction")
        icon7 = QIcon()
        icon7.addFile(u":/icons/icons/print.png", QSize(), QIcon.Normal, QIcon.Off)
        self.action_Print_Transaction.setIcon(icon7)
        self.action_Print_Transaction.setFont(font1)
        self.action_Data_Initialization = QAction(HomeWindow)
        self.action_Data_Initialization.setObjectName(u"action_Data_Initialization")
        icon8 = QIcon()
        icon8.addFile(u":/icons/icons/reset.png", QSize(), QIcon.Normal, QIcon.Off)
        self.action_Data_Initialization.setIcon(icon8)
        self.action_Data_Initialization.setFont(font1)
        self.action_Delete_Transaction = QAction(HomeWindow)
        self.action_Delete_Transaction.setObjectName(u"action_Delete_Transaction")
        self.action_Delete_Transaction.setIcon(icon5)
        self.action_Delete_Transaction.setFont(font1)
        self.action_About = QAction(HomeWindow)
        self.action_About.setObjectName(u"action_About")
        icon9 = QIcon()
        icon9.addFile(u":/icons/icons/about.png", QSize(), QIcon.Normal, QIcon.Off)
        self.action_About.setIcon(icon9)
        self.action_About.setFont(font1)
        self.action_Change_Username = QAction(HomeWindow)
        self.action_Change_Username.setObjectName(u"action_Change_Username")
        icon10 = QIcon()
        icon10.addFile(u":/icons/icons/user.png", QSize(), QIcon.Normal, QIcon.Off)
        self.action_Change_Username.setIcon(icon10)
        self.action_Change_Username.setFont(font1)
        self.action_Show_Users = QAction(HomeWindow)
        self.action_Show_Users.setObjectName(u"action_Show_Users")
        icon11 = QIcon()
        icon11.addFile(u":/icons/icons/show_users.png", QSize(), QIcon.Normal, QIcon.Off)
        self.action_Show_Users.setIcon(icon11)
        self.centralwidget = QWidget(HomeWindow)
        self.centralwidget.setObjectName(u"centralwidget")
        self.gridLayout = QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName(u"gridLayout")
        self.verticalSpacer_3 = QSpacerItem(20, 19, QSizePolicy.Minimum, QSizePolicy.Expanding)

        self.gridLayout.addItem(self.verticalSpacer_3, 0, 0, 1, 1)

        self.horizontalLayout_2 = QHBoxLayout()
        self.horizontalLayout_2.setObjectName(u"horizontalLayout_2")
        self.horizontalSpacer_3 = QSpacerItem(40, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)

        self.horizontalLayout_2.addItem(self.horizontalSpacer_3)

        self.label_2 = QLabel(self.centralwidget)
        self.label_2.setObjectName(u"label_2")
        self.label_2.setStyleSheet(u"")
        self.label_2.setPixmap(QPixmap(u":/icons/icons/expense_tracker_big.png"))
        self.label_2.setAlignment(Qt.AlignCenter)

        self.horizontalLayout_2.addWidget(self.label_2)

        self.horizontalSpacer_4 = QSpacerItem(40, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)

        self.horizontalLayout_2.addItem(self.horizontalSpacer_4)


        self.gridLayout.addLayout(self.horizontalLayout_2, 1, 0, 1, 1)

        self.verticalSpacer_2 = QSpacerItem(20, 18, QSizePolicy.Minimum, QSizePolicy.Expanding)

        self.gridLayout.addItem(self.verticalSpacer_2, 2, 0, 1, 1)

        self.horizontalLayout_3 = QHBoxLayout()
        self.horizontalLayout_3.setObjectName(u"horizontalLayout_3")
        self.horizontalLayout_3.setContentsMargins(200, -1, 200, -1)
        self.tableView = QTableView(self.centralwidget)
        self.tableView.setObjectName(u"tableView")
        self.tableView.setFont(font1)
        self.tableView.setStyleSheet(u"background-color: rgb(255, 255, 255);")
        self.tableView.setEditTriggers(QAbstractItemView.NoEditTriggers)
        self.tableView.setAlternatingRowColors(True)
        self.tableView.setSelectionMode(QAbstractItemView.SingleSelection)
        self.tableView.setSelectionBehavior(QAbstractItemView.SelectRows)
        self.tableView.horizontalHeader().setStretchLastSection(True)
        self.tableView.verticalHeader().setStretchLastSection(True)

        self.horizontalLayout_3.addWidget(self.tableView)


        self.gridLayout.addLayout(self.horizontalLayout_3, 3, 0, 1, 1)

        self.verticalSpacer = QSpacerItem(20, 19, QSizePolicy.Minimum, QSizePolicy.Expanding)

        self.gridLayout.addItem(self.verticalSpacer, 4, 0, 1, 1)

        self.horizontalLayout = QHBoxLayout()
        self.horizontalLayout.setObjectName(u"horizontalLayout")
        self.horizontalSpacer = QSpacerItem(40, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)

        self.horizontalLayout.addItem(self.horizontalSpacer)

        self.buttonBankBalance = QPushButton(self.centralwidget)
        self.buttonBankBalance.setObjectName(u"buttonBankBalance")
        self.buttonBankBalance.setMinimumSize(QSize(200, 30))
        self.buttonBankBalance.setMaximumSize(QSize(200, 30))
        self.buttonBankBalance.setFont(font1)
        self.buttonBankBalance.setStyleSheet(u"background-color: rgb(255, 255, 255);\n"
"border-color: rgb(64, 107, 191);")
        self.buttonBankBalance.setIcon(icon4)

        self.horizontalLayout.addWidget(self.buttonBankBalance)

        self.horizontalSpacer_2 = QSpacerItem(40, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)

        self.horizontalLayout.addItem(self.horizontalSpacer_2)


        self.gridLayout.addLayout(self.horizontalLayout, 5, 0, 1, 1)

        self.verticalSpacer_4 = QSpacerItem(20, 40, QSizePolicy.Minimum, QSizePolicy.Expanding)

        self.gridLayout.addItem(self.verticalSpacer_4, 6, 0, 1, 1)

        HomeWindow.setCentralWidget(self.centralwidget)
        self.menubar = QMenuBar(HomeWindow)
        self.menubar.setObjectName(u"menubar")
        self.menubar.setGeometry(QRect(0, 0, 1100, 23))
        self.menubar.setStyleSheet(u"background-color: rgb(200, 200, 200);")
        self.menu_File = QMenu(self.menubar)
        self.menu_File.setObjectName(u"menu_File")
        self.menu_File.setStyleSheet(u"background-color: rgb(243, 243, 243);\n"
"selection-background-color: rgb(32, 74, 135);\n"
"selection-color: rgb(243, 243, 243);")
        self.menu_Account = QMenu(self.menubar)
        self.menu_Account.setObjectName(u"menu_Account")
        self.menu_Account.setStyleSheet(u"background-color: rgb(243, 243, 243);\n"
"selection-background-color: rgb(32, 74, 135);\n"
"selection-color: rgb(243, 243, 243);")
        self.menu_Head = QMenu(self.menubar)
        self.menu_Head.setObjectName(u"menu_Head")
        self.menu_Head.setStyleSheet(u"background-color: rgb(243, 243, 243);\n"
"selection-background-color: rgb(32, 74, 135);\n"
"selection-color: rgb(243, 243, 243);")
        self.menu_Transactions = QMenu(self.menubar)
        self.menu_Transactions.setObjectName(u"menu_Transactions")
        self.menu_Transactions.setStyleSheet(u"background-color: rgb(243, 243, 243);\n"
"selection-background-color: rgb(32, 74, 135);\n"
"selection-color: rgb(243, 243, 243);")
        self.menu_Users = QMenu(self.menubar)
        self.menu_Users.setObjectName(u"menu_Users")
        self.menu_Users.setStyleSheet(u"background-color: rgb(243, 243, 243);\n"
"selection-background-color: rgb(32, 74, 135);\n"
"selection-color: rgb(243, 243, 243);")
        self.menu_Initiaize = QMenu(self.menubar)
        self.menu_Initiaize.setObjectName(u"menu_Initiaize")
        self.menu_Initiaize.setStyleSheet(u"background-color: rgb(243, 243, 243);\n"
"selection-background-color: rgb(32, 74, 135);\n"
"selection-color: rgb(243, 243, 243);")
        HomeWindow.setMenuBar(self.menubar)
        self.statusbar = QStatusBar(HomeWindow)
        self.statusbar.setObjectName(u"statusbar")
        self.statusbar.setFont(font)
        HomeWindow.setStatusBar(self.statusbar)
        self.toolBar = QToolBar(HomeWindow)
        self.toolBar.setObjectName(u"toolBar")
        self.toolBar.setStyleSheet(u"background-color: rgb(200, 255, 210);\n"
"")
        HomeWindow.addToolBar(Qt.TopToolBarArea, self.toolBar)

        self.menubar.addAction(self.menu_File.menuAction())
        self.menubar.addAction(self.menu_Account.menuAction())
        self.menubar.addAction(self.menu_Head.menuAction())
        self.menubar.addAction(self.menu_Transactions.menuAction())
        self.menubar.addAction(self.menu_Users.menuAction())
        self.menubar.addAction(self.menu_Initiaize.menuAction())
        self.menu_File.addAction(self.action_Print_Transaction)
        self.menu_File.addAction(self.action_About)
        self.menu_File.addSeparator()
        self.menu_File.addAction(self.action_Exit)
        self.menu_Account.addAction(self.action_Add_Account)
        self.menu_Account.addAction(self.action_Edit_Account)
        self.menu_Account.addAction(self.action_View_Account)
        self.menu_Account.addSeparator()
        self.menu_Account.addAction(self.action_Delete_Account)
        self.menu_Account.addSeparator()
        self.menu_Head.addAction(self.action_Add_Head)
        self.menu_Head.addAction(self.action_Edit_Head)
        self.menu_Head.addAction(self.action_View_Head)
        self.menu_Head.addSeparator()
        self.menu_Head.addAction(self.action_Delete_Head)
        self.menu_Head.addSeparator()
        self.menu_Transactions.addAction(self.action_Add_Transaction)
        self.menu_Transactions.addAction(self.action_Edit_Transaction)
        self.menu_Transactions.addAction(self.action_View_Transaction)
        self.menu_Transactions.addSeparator()
        self.menu_Transactions.addAction(self.action_Delete_Transaction)
        self.menu_Transactions.addSeparator()
        self.menu_Users.addSeparator()
        self.menu_Users.addAction(self.action_Show_Users)
        self.menu_Users.addAction(self.action_Change_Password)
        self.menu_Users.addAction(self.action_Change_Username)
        self.menu_Initiaize.addAction(self.action_Data_Initialization)
        self.toolBar.addAction(self.action_Data_Initialization)
        self.toolBar.addAction(self.action_Show_Users)
        self.toolBar.addAction(self.action_Change_Password)
        self.toolBar.addAction(self.action_Change_Username)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.action_Add_Transaction)
        self.toolBar.addAction(self.action_Edit_Transaction)
        self.toolBar.addAction(self.action_Delete_Transaction)
        self.toolBar.addAction(self.action_View_Transaction)
        self.toolBar.addAction(self.action_Print_Transaction)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.action_About)
        self.toolBar.addAction(self.action_Exit)

        self.retranslateUi(HomeWindow)
        self.action_Exit.triggered.connect(HomeWindow.close)
        self.action_About.triggered.connect(HomeWindow.about)
        self.action_Print_Transaction.triggered.connect(HomeWindow.print_transactions)
        self.action_Add_Account.triggered.connect(HomeWindow.add_account)
        self.action_Edit_Account.triggered.connect(HomeWindow.edit_account)
        self.action_View_Account.triggered.connect(HomeWindow.view_account)
        self.action_Delete_Account.triggered.connect(HomeWindow.delete_account)
        self.action_Add_Head.triggered.connect(HomeWindow.add_head)
        self.action_Edit_Head.triggered.connect(HomeWindow.edit_head)
        self.action_View_Head.triggered.connect(HomeWindow.view_head)
        self.action_Delete_Head.triggered.connect(HomeWindow.delete_head)
        self.action_Add_Transaction.triggered.connect(HomeWindow.add_transaction)
        self.action_Edit_Transaction.triggered.connect(HomeWindow.edit_transaction)
        self.action_View_Transaction.triggered.connect(HomeWindow.view_transaction)
        self.action_Delete_Transaction.triggered.connect(HomeWindow.delete_transaction)
        self.action_Change_Password.triggered.connect(HomeWindow.change_password)
        self.action_Data_Initialization.triggered.connect(HomeWindow.initialize_data)
        self.buttonBankBalance.clicked.connect(HomeWindow.bank_balance_details)
        self.action_Change_Username.triggered.connect(HomeWindow.change_username)
        self.action_Show_Users.triggered.connect(HomeWindow.show_all_users)

        QMetaObject.connectSlotsByName(HomeWindow)
    # setupUi

    def retranslateUi(self, HomeWindow):
        HomeWindow.setWindowTitle(QCoreApplication.translate("HomeWindow", u"Expense Tracker", None))
        self.action_Exit.setText(QCoreApplication.translate("HomeWindow", u"E&xit", None))
#if QT_CONFIG(tooltip)
        self.action_Exit.setToolTip(QCoreApplication.translate("HomeWindow", u"Quit application", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.action_Exit.setStatusTip(QCoreApplication.translate("HomeWindow", u"Quit application", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.action_Exit.setShortcut(QCoreApplication.translate("HomeWindow", u"Ctrl+X", None))
#endif // QT_CONFIG(shortcut)
        self.action_Add_Account.setText(QCoreApplication.translate("HomeWindow", u"&Add Account", None))
#if QT_CONFIG(tooltip)
        self.action_Add_Account.setToolTip(QCoreApplication.translate("HomeWindow", u"Add new bank account", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.action_Add_Account.setStatusTip(QCoreApplication.translate("HomeWindow", u"Add new bank account", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.action_Add_Account.setShortcut(QCoreApplication.translate("HomeWindow", u"Ctrl+Alt+Shift+A", None))
#endif // QT_CONFIG(shortcut)
        self.action_Edit_Account.setText(QCoreApplication.translate("HomeWindow", u"&Edit Account", None))
#if QT_CONFIG(tooltip)
        self.action_Edit_Account.setToolTip(QCoreApplication.translate("HomeWindow", u"Edit an existing bank account", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.action_Edit_Account.setStatusTip(QCoreApplication.translate("HomeWindow", u"Edit an existing bank account", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.action_Edit_Account.setShortcut(QCoreApplication.translate("HomeWindow", u"Ctrl+Alt+Shift+E", None))
#endif // QT_CONFIG(shortcut)
        self.action_View_Account.setText(QCoreApplication.translate("HomeWindow", u"&View Account", None))
#if QT_CONFIG(tooltip)
        self.action_View_Account.setToolTip(QCoreApplication.translate("HomeWindow", u"View existing  bank accounts", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.action_View_Account.setStatusTip(QCoreApplication.translate("HomeWindow", u"View existing  bank accounts", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.action_View_Account.setShortcut(QCoreApplication.translate("HomeWindow", u"Ctrl+Alt+Shift+V", None))
#endif // QT_CONFIG(shortcut)
        self.action_Delete_Account.setText(QCoreApplication.translate("HomeWindow", u"&Delete Account", None))
#if QT_CONFIG(tooltip)
        self.action_Delete_Account.setToolTip(QCoreApplication.translate("HomeWindow", u"Delete an existing bank account", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.action_Delete_Account.setStatusTip(QCoreApplication.translate("HomeWindow", u"Delete an existing bank account", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.action_Delete_Account.setShortcut(QCoreApplication.translate("HomeWindow", u"Ctrl+Alt+Shift+D", None))
#endif // QT_CONFIG(shortcut)
        self.action_Add_Head.setText(QCoreApplication.translate("HomeWindow", u"&Add Head", None))
#if QT_CONFIG(tooltip)
        self.action_Add_Head.setToolTip(QCoreApplication.translate("HomeWindow", u"Add new expenditure head", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.action_Add_Head.setStatusTip(QCoreApplication.translate("HomeWindow", u"Add new expenditure head", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.action_Add_Head.setShortcut(QCoreApplication.translate("HomeWindow", u"Ctrl+Alt+A", None))
#endif // QT_CONFIG(shortcut)
        self.action_Edit_Head.setText(QCoreApplication.translate("HomeWindow", u"&Edit Head", None))
#if QT_CONFIG(tooltip)
        self.action_Edit_Head.setToolTip(QCoreApplication.translate("HomeWindow", u"Edit an existing expenditure head", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.action_Edit_Head.setStatusTip(QCoreApplication.translate("HomeWindow", u"Edit an existing expenditure head", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.action_Edit_Head.setShortcut(QCoreApplication.translate("HomeWindow", u"Ctrl+Alt+E", None))
#endif // QT_CONFIG(shortcut)
        self.action_View_Head.setText(QCoreApplication.translate("HomeWindow", u"&View Head", None))
#if QT_CONFIG(tooltip)
        self.action_View_Head.setToolTip(QCoreApplication.translate("HomeWindow", u"View existing expenditure heads", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.action_View_Head.setStatusTip(QCoreApplication.translate("HomeWindow", u"View existing expenditure heads", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.action_View_Head.setShortcut(QCoreApplication.translate("HomeWindow", u"Ctrl+Alt+V", None))
#endif // QT_CONFIG(shortcut)
        self.action_Delete_Head.setText(QCoreApplication.translate("HomeWindow", u"&Delete Head", None))
#if QT_CONFIG(tooltip)
        self.action_Delete_Head.setToolTip(QCoreApplication.translate("HomeWindow", u"Delete an existing expenditure head", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.action_Delete_Head.setStatusTip(QCoreApplication.translate("HomeWindow", u"Delete an existing expenditure head", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.action_Delete_Head.setShortcut(QCoreApplication.translate("HomeWindow", u"Ctrl+Alt+D", None))
#endif // QT_CONFIG(shortcut)
        self.action_Add_Transaction.setText(QCoreApplication.translate("HomeWindow", u"&Add Transaction", None))
#if QT_CONFIG(tooltip)
        self.action_Add_Transaction.setToolTip(QCoreApplication.translate("HomeWindow", u"Add new transaction", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.action_Add_Transaction.setStatusTip(QCoreApplication.translate("HomeWindow", u"Add new transaction", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.action_Add_Transaction.setShortcut(QCoreApplication.translate("HomeWindow", u"Ctrl+Shift+A", None))
#endif // QT_CONFIG(shortcut)
        self.action_Edit_Transaction.setText(QCoreApplication.translate("HomeWindow", u"&Edit Transaction", None))
#if QT_CONFIG(tooltip)
        self.action_Edit_Transaction.setToolTip(QCoreApplication.translate("HomeWindow", u"Edit an existing transaction", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.action_Edit_Transaction.setStatusTip(QCoreApplication.translate("HomeWindow", u"Edit an existing transaction", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.action_Edit_Transaction.setShortcut(QCoreApplication.translate("HomeWindow", u"Ctrl+Shift+E", None))
#endif // QT_CONFIG(shortcut)
        self.action_View_Transaction.setText(QCoreApplication.translate("HomeWindow", u"&View Transaction", None))
#if QT_CONFIG(tooltip)
        self.action_View_Transaction.setToolTip(QCoreApplication.translate("HomeWindow", u"View existing transactions", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.action_View_Transaction.setStatusTip(QCoreApplication.translate("HomeWindow", u"View existing transactions", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.action_View_Transaction.setShortcut(QCoreApplication.translate("HomeWindow", u"Ctrl+Shift+V", None))
#endif // QT_CONFIG(shortcut)
        self.action_Change_Password.setText(QCoreApplication.translate("HomeWindow", u"Change &Password", None))
        self.action_Change_Password.setIconText(QCoreApplication.translate("HomeWindow", u"Change Password for active user", None))
#if QT_CONFIG(tooltip)
        self.action_Change_Password.setToolTip(QCoreApplication.translate("HomeWindow", u"Change Password for active user", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.action_Change_Password.setStatusTip(QCoreApplication.translate("HomeWindow", u"Change Password for active user", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.action_Change_Password.setShortcut(QCoreApplication.translate("HomeWindow", u"Ctrl+P", None))
#endif // QT_CONFIG(shortcut)
        self.action_Print_Transaction.setText(QCoreApplication.translate("HomeWindow", u"&Print Expenditure", None))
#if QT_CONFIG(tooltip)
        self.action_Print_Transaction.setToolTip(QCoreApplication.translate("HomeWindow", u"Print existing expenditure", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.action_Print_Transaction.setStatusTip(QCoreApplication.translate("HomeWindow", u"Print existing expenditure", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.action_Print_Transaction.setShortcut(QCoreApplication.translate("HomeWindow", u"Shift+P", None))
#endif // QT_CONFIG(shortcut)
        self.action_Data_Initialization.setText(QCoreApplication.translate("HomeWindow", u"Data Initiali&zation", None))
#if QT_CONFIG(tooltip)
        self.action_Data_Initialization.setToolTip(QCoreApplication.translate("HomeWindow", u"Delete all existing transactions", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.action_Data_Initialization.setStatusTip(QCoreApplication.translate("HomeWindow", u"Delete all existing transactions", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.action_Data_Initialization.setShortcut(QCoreApplication.translate("HomeWindow", u"Ctrl+Z", None))
#endif // QT_CONFIG(shortcut)
        self.action_Delete_Transaction.setText(QCoreApplication.translate("HomeWindow", u"&Delete Transaction", None))
#if QT_CONFIG(tooltip)
        self.action_Delete_Transaction.setToolTip(QCoreApplication.translate("HomeWindow", u"Delete an existing transaction", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.action_Delete_Transaction.setStatusTip(QCoreApplication.translate("HomeWindow", u"Delete an existing transaction", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.action_Delete_Transaction.setShortcut(QCoreApplication.translate("HomeWindow", u"Ctrl+Shift+D", None))
#endif // QT_CONFIG(shortcut)
        self.action_About.setText(QCoreApplication.translate("HomeWindow", u"&About", None))
#if QT_CONFIG(tooltip)
        self.action_About.setToolTip(QCoreApplication.translate("HomeWindow", u"About the application and the developer", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.action_About.setStatusTip(QCoreApplication.translate("HomeWindow", u"About the application and the developer", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.action_About.setShortcut(QCoreApplication.translate("HomeWindow", u"Ctrl+A", None))
#endif // QT_CONFIG(shortcut)
        self.action_Change_Username.setText(QCoreApplication.translate("HomeWindow", u"Change &Username", None))
        self.action_Change_Username.setIconText(QCoreApplication.translate("HomeWindow", u"Change Username for active user", None))
#if QT_CONFIG(tooltip)
        self.action_Change_Username.setToolTip(QCoreApplication.translate("HomeWindow", u"Change Username for active user", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.action_Change_Username.setStatusTip(QCoreApplication.translate("HomeWindow", u"Change Username for active user", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.action_Change_Username.setShortcut(QCoreApplication.translate("HomeWindow", u"Ctrl+U", None))
#endif // QT_CONFIG(shortcut)
        self.action_Show_Users.setText(QCoreApplication.translate("HomeWindow", u"&Show Users", None))
#if QT_CONFIG(tooltip)
        self.action_Show_Users.setToolTip(QCoreApplication.translate("HomeWindow", u"Show all Users", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.action_Show_Users.setShortcut(QCoreApplication.translate("HomeWindow", u"Ctrl+S", None))
#endif // QT_CONFIG(shortcut)
        self.label_2.setText("")
        self.buttonBankBalance.setText(QCoreApplication.translate("HomeWindow", u"&Bank Balance Details", None))
        self.menu_File.setTitle(QCoreApplication.translate("HomeWindow", u"&File", None))
        self.menu_Account.setTitle(QCoreApplication.translate("HomeWindow", u"&Account", None))
        self.menu_Head.setTitle(QCoreApplication.translate("HomeWindow", u"&Head", None))
        self.menu_Transactions.setTitle(QCoreApplication.translate("HomeWindow", u"&Transactions", None))
        self.menu_Users.setTitle(QCoreApplication.translate("HomeWindow", u"&Users", None))
        self.menu_Initiaize.setTitle(QCoreApplication.translate("HomeWindow", u"&Initialization", None))
        self.toolBar.setWindowTitle(QCoreApplication.translate("HomeWindow", u"toolBar", None))
    # retranslateUi

