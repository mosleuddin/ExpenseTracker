
"""
    Copyright Â© 2021-2022  Mosleuddin Sarkar

    This file is part of ExpenseTracker.

    ExpenseTracker is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    ExpenseTracker is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with ExpenseTracker.  If not, see <https://www.gnu.org/licenses/>.
"""


# -*- coding: utf-8 -*-

################################################################################
## Form generated from reading UI file 'home.ui'
##
## Created by: Qt User Interface Compiler version 6.2.2
##
## WARNING! All changes made in this file will be lost when recompiling UI file!
################################################################################

from PySide6.QtCore import (QCoreApplication, QDate, QDateTime, QLocale,
    QMetaObject, QObject, QPoint, QRect,
    QSize, QTime, QUrl, Qt)
from PySide6.QtGui import (QAction, QBrush, QColor, QConicalGradient,
    QCursor, QFont, QFontDatabase, QGradient,
    QIcon, QImage, QKeySequence, QLinearGradient,
    QPainter, QPalette, QPixmap, QRadialGradient,
    QTransform)
from PySide6.QtWidgets import (QAbstractItemView, QAbstractScrollArea, QApplication, QFrame,
    QHBoxLayout, QHeaderView, QLabel, QLayout,
    QLineEdit, QMainWindow, QMenu, QMenuBar,
    QSizePolicy, QSpacerItem, QStatusBar, QTableView,
    QToolBar, QVBoxLayout, QWidget)
from src import resource

class Ui_HomeWindow(object):
    def setupUi(self, HomeWindow):
        if not HomeWindow.objectName():
            HomeWindow.setObjectName(u"HomeWindow")
        HomeWindow.setWindowModality(Qt.WindowModal)
        HomeWindow.resize(1782, 644)
        sizePolicy = QSizePolicy(QSizePolicy.Fixed, QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(HomeWindow.sizePolicy().hasHeightForWidth())
        HomeWindow.setSizePolicy(sizePolicy)
        font = QFont()
        font.setPointSize(10)
        HomeWindow.setFont(font)
        icon = QIcon()
        icon.addFile(u":/icons/expense_tracker_sm.png", QSize(), QIcon.Normal, QIcon.Off)
        HomeWindow.setWindowIcon(icon)
        HomeWindow.setStyleSheet(u"*{\n"
"	background-color:#10141b;\n"
"	color:CadetBlue\n"
"}\n"
"\n"
"QMenuBar,\n"
"QMenu,\n"
"QToolBar{\n"
"                     	background-color:  #1f232a;\n"
"					color:rgba(255, 255, 255, .50);\n"
"			   		selection-color: rgba(255, 255, 255,  .70);\n"
"	             	selection-background-color: #10141b;\n"
" }\n"
"\n"
"#tableView{\n"
"				background-color: #1f232a;\n"
"				color:rgba(255, 255, 255, .60)\n"
"}\n"
"\n"
"#editCashBalance, \n"
"#editBankBalance,  \n"
"#editTotalBalance {\n"
"			color:rgba(255, 255, 255, .75);\n"
" }\n"
"\n"
"\n"
"\n"
"")
        self.actionExit = QAction(HomeWindow)
        self.actionExit.setObjectName(u"actionExit")
        icon1 = QIcon()
        icon1.addFile(u":/icons/icons/exit.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionExit.setIcon(icon1)
        font1 = QFont()
        self.actionExit.setFont(font1)
        self.actionAddAccount = QAction(HomeWindow)
        self.actionAddAccount.setObjectName(u"actionAddAccount")
        icon2 = QIcon()
        icon2.addFile(u":/icons/icons/add.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionAddAccount.setIcon(icon2)
        self.actionAddAccount.setFont(font1)
        self.actionEditAccount = QAction(HomeWindow)
        self.actionEditAccount.setObjectName(u"actionEditAccount")
        icon3 = QIcon()
        icon3.addFile(u":/icons/icons/edit.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionEditAccount.setIcon(icon3)
        self.actionEditAccount.setFont(font1)
        self.actionViewAccount = QAction(HomeWindow)
        self.actionViewAccount.setObjectName(u"actionViewAccount")
        icon4 = QIcon()
        icon4.addFile(u":/icons/icons/view.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionViewAccount.setIcon(icon4)
        self.actionViewAccount.setFont(font1)
        self.actionDeleteAccount = QAction(HomeWindow)
        self.actionDeleteAccount.setObjectName(u"actionDeleteAccount")
        icon5 = QIcon()
        icon5.addFile(u":/icons/icons/delete.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionDeleteAccount.setIcon(icon5)
        self.actionDeleteAccount.setFont(font1)
        self.actionAddHead = QAction(HomeWindow)
        self.actionAddHead.setObjectName(u"actionAddHead")
        self.actionAddHead.setIcon(icon2)
        self.actionAddHead.setFont(font1)
        self.actionEditHead = QAction(HomeWindow)
        self.actionEditHead.setObjectName(u"actionEditHead")
        self.actionEditHead.setIcon(icon3)
        self.actionEditHead.setFont(font1)
        self.actionViewHead = QAction(HomeWindow)
        self.actionViewHead.setObjectName(u"actionViewHead")
        self.actionViewHead.setIcon(icon4)
        self.actionViewHead.setFont(font1)
        self.actionDeleteHead = QAction(HomeWindow)
        self.actionDeleteHead.setObjectName(u"actionDeleteHead")
        self.actionDeleteHead.setIcon(icon5)
        self.actionDeleteHead.setFont(font1)
        self.actionAddReceipt = QAction(HomeWindow)
        self.actionAddReceipt.setObjectName(u"actionAddReceipt")
        self.actionAddReceipt.setIcon(icon2)
        self.actionAddReceipt.setFont(font1)
        self.actionEditReceipt = QAction(HomeWindow)
        self.actionEditReceipt.setObjectName(u"actionEditReceipt")
        self.actionEditReceipt.setIcon(icon3)
        self.actionEditReceipt.setFont(font1)
        self.actionViewReceipt = QAction(HomeWindow)
        self.actionViewReceipt.setObjectName(u"actionViewReceipt")
        self.actionViewReceipt.setIcon(icon4)
        self.actionViewReceipt.setFont(font1)
        self.actionChangePassword = QAction(HomeWindow)
        self.actionChangePassword.setObjectName(u"actionChangePassword")
        icon6 = QIcon()
        icon6.addFile(u":/icons/icons/password.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionChangePassword.setIcon(icon6)
        self.actionChangePassword.setFont(font1)
        self.actionTransactions = QAction(HomeWindow)
        self.actionTransactions.setObjectName(u"actionTransactions")
        icon7 = QIcon()
        icon7.addFile(u":/icons/icons/print.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionTransactions.setIcon(icon7)
        self.actionTransactions.setFont(font1)
        self.actionInitialization = QAction(HomeWindow)
        self.actionInitialization.setObjectName(u"actionInitialization")
        icon8 = QIcon()
        icon8.addFile(u":/icons/icons/reset.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionInitialization.setIcon(icon8)
        self.actionInitialization.setFont(font1)
        self.actionDeleteReceipt = QAction(HomeWindow)
        self.actionDeleteReceipt.setObjectName(u"actionDeleteReceipt")
        self.actionDeleteReceipt.setIcon(icon5)
        self.actionDeleteReceipt.setFont(font1)
        self.actionAboutAppDev = QAction(HomeWindow)
        self.actionAboutAppDev.setObjectName(u"actionAboutAppDev")
        icon9 = QIcon()
        icon9.addFile(u":/icons/icons/about.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionAboutAppDev.setIcon(icon9)
        self.actionAboutAppDev.setFont(font1)
        self.actionChangeUsername = QAction(HomeWindow)
        self.actionChangeUsername.setObjectName(u"actionChangeUsername")
        icon10 = QIcon()
        icon10.addFile(u":/icons/icons/user.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionChangeUsername.setIcon(icon10)
        self.actionChangeUsername.setFont(font1)
        self.actionShowUsers = QAction(HomeWindow)
        self.actionShowUsers.setObjectName(u"actionShowUsers")
        icon11 = QIcon()
        icon11.addFile(u":/icons/icons/show_users.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionShowUsers.setIcon(icon11)
        self.actionAddPayment = QAction(HomeWindow)
        self.actionAddPayment.setObjectName(u"actionAddPayment")
        self.actionAddPayment.setIcon(icon2)
        self.actionEditPayment = QAction(HomeWindow)
        self.actionEditPayment.setObjectName(u"actionEditPayment")
        self.actionEditPayment.setIcon(icon3)
        self.actionViewPayment = QAction(HomeWindow)
        self.actionViewPayment.setObjectName(u"actionViewPayment")
        self.actionViewPayment.setIcon(icon4)
        self.actionDeletePayment = QAction(HomeWindow)
        self.actionDeletePayment.setObjectName(u"actionDeletePayment")
        self.actionDeletePayment.setIcon(icon5)
        self.actionViewReceiptContra = QAction(HomeWindow)
        self.actionViewReceiptContra.setObjectName(u"actionViewReceiptContra")
        self.actionViewReceiptContra.setIcon(icon4)
        self.actionViewPaymentContra = QAction(HomeWindow)
        self.actionViewPaymentContra.setObjectName(u"actionViewPaymentContra")
        self.actionViewPaymentContra.setIcon(icon4)
        self.actionViewAllContra = QAction(HomeWindow)
        self.actionViewAllContra.setObjectName(u"actionViewAllContra")
        self.actionViewAllContra.setIcon(icon4)
        self.actionBasicDetails = QAction(HomeWindow)
        self.actionBasicDetails.setObjectName(u"actionBasicDetails")
        icon12 = QIcon()
        icon12.addFile(u":/icons/icons/website.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionBasicDetails.setIcon(icon12)
        self.actionAccountBalance = QAction(HomeWindow)
        self.actionAccountBalance.setObjectName(u"actionAccountBalance")
        self.actionAccountBalance.setIcon(icon3)
        self.actionChangeImage = QAction(HomeWindow)
        self.actionChangeImage.setObjectName(u"actionChangeImage")
        icon13 = QIcon()
        icon13.addFile(u":/icons/icons/expense_tracker_sm.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionChangeImage.setIcon(icon13)
        self.actionPeriodMismatch = QAction(HomeWindow)
        self.actionPeriodMismatch.setObjectName(u"actionPeriodMismatch")
        icon14 = QIcon()
        icon14.addFile(u":/icons/icons/period.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionPeriodMismatch.setIcon(icon14)
        self.centralwidget = QWidget(HomeWindow)
        self.centralwidget.setObjectName(u"centralwidget")
        self.verticalLayout = QVBoxLayout(self.centralwidget)
        self.verticalLayout.setSpacing(1)
        self.verticalLayout.setObjectName(u"verticalLayout")
        self.verticalLayout.setContentsMargins(-1, 0, -1, 0)
        self.top_widget = QWidget(self.centralwidget)
        self.top_widget.setObjectName(u"top_widget")
        self.top_layout = QHBoxLayout(self.top_widget)
        self.top_layout.setSpacing(10)
        self.top_layout.setObjectName(u"top_layout")
        self.top_layout.setContentsMargins(10, 10, 10, 10)
        self.labelHeading = QLabel(self.top_widget)
        self.labelHeading.setObjectName(u"labelHeading")
        font2 = QFont()
        font2.setPointSize(14)
        font2.setBold(True)
        self.labelHeading.setFont(font2)
        self.labelHeading.setAlignment(Qt.AlignCenter)

        self.top_layout.addWidget(self.labelHeading)

        self.labelOwner = QLabel(self.top_widget)
        self.labelOwner.setObjectName(u"labelOwner")
        font3 = QFont()
        font3.setPointSize(30)
        font3.setBold(True)
        font3.setItalic(False)
        self.labelOwner.setFont(font3)
        self.labelOwner.setAlignment(Qt.AlignCenter)

        self.top_layout.addWidget(self.labelOwner)

        self.labelAddress = QLabel(self.top_widget)
        self.labelAddress.setObjectName(u"labelAddress")
        font4 = QFont()
        font4.setPointSize(14)
        font4.setBold(True)
        font4.setItalic(False)
        self.labelAddress.setFont(font4)
        self.labelAddress.setAlignment(Qt.AlignCenter)

        self.top_layout.addWidget(self.labelAddress)

        self.labelImage = QLabel(self.top_widget)
        self.labelImage.setObjectName(u"labelImage")
        self.labelImage.setMinimumSize(QSize(0, 0))
        self.labelImage.setMaximumSize(QSize(16777215, 16777215))
        self.labelImage.setAlignment(Qt.AlignCenter)

        self.top_layout.addWidget(self.labelImage)


        self.verticalLayout.addWidget(self.top_widget)

        self.detailsLayout = QHBoxLayout()
        self.detailsLayout.setSpacing(10)
        self.detailsLayout.setObjectName(u"detailsLayout")
        self.detailsLayout.setContentsMargins(50, 0, 0, -1)
        self.labelMonth = QLabel(self.centralwidget)
        self.labelMonth.setObjectName(u"labelMonth")
        self.labelMonth.setFont(font2)
        self.labelMonth.setAlignment(Qt.AlignCenter)

        self.detailsLayout.addWidget(self.labelMonth)

        self.labelYear = QLabel(self.centralwidget)
        self.labelYear.setObjectName(u"labelYear")
        self.labelYear.setFont(font2)
        self.labelYear.setAlignment(Qt.AlignCenter)

        self.detailsLayout.addWidget(self.labelYear)

        self.horizontalSpacer_3 = QSpacerItem(40, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)

        self.detailsLayout.addItem(self.horizontalSpacer_3)


        self.verticalLayout.addLayout(self.detailsLayout)

        self.tableViewLayout = QHBoxLayout()
        self.tableViewLayout.setSpacing(6)
        self.tableViewLayout.setObjectName(u"tableViewLayout")
        self.tableViewLayout.setSizeConstraint(QLayout.SetDefaultConstraint)
        self.tableViewLayout.setContentsMargins(0, 20, 0, -1)
        self.tableView = QTableView(self.centralwidget)
        self.tableView.setObjectName(u"tableView")
        sizePolicy1 = QSizePolicy(QSizePolicy.Preferred, QSizePolicy.Expanding)
        sizePolicy1.setHorizontalStretch(0)
        sizePolicy1.setVerticalStretch(0)
        sizePolicy1.setHeightForWidth(self.tableView.sizePolicy().hasHeightForWidth())
        self.tableView.setSizePolicy(sizePolicy1)
        font5 = QFont()
        font5.setPointSize(12)
        self.tableView.setFont(font5)
        self.tableView.setStyleSheet(u"")
        self.tableView.setFrameShadow(QFrame.Plain)
        self.tableView.setSizeAdjustPolicy(QAbstractScrollArea.AdjustIgnored)
        self.tableView.setAutoScroll(True)
        self.tableView.setAutoScrollMargin(10)
        self.tableView.setEditTriggers(QAbstractItemView.NoEditTriggers)
        self.tableView.setAlternatingRowColors(False)
        self.tableView.setSelectionMode(QAbstractItemView.SingleSelection)
        self.tableView.setSelectionBehavior(QAbstractItemView.SelectRows)
        self.tableView.setVerticalScrollMode(QAbstractItemView.ScrollPerPixel)
        self.tableView.setHorizontalScrollMode(QAbstractItemView.ScrollPerPixel)
        self.tableView.setGridStyle(Qt.SolidLine)
        self.tableView.horizontalHeader().setHighlightSections(False)
        self.tableView.horizontalHeader().setStretchLastSection(True)
        self.tableView.verticalHeader().setVisible(False)
        self.tableView.verticalHeader().setHighlightSections(False)
        self.tableView.verticalHeader().setStretchLastSection(False)

        self.tableViewLayout.addWidget(self.tableView)


        self.verticalLayout.addLayout(self.tableViewLayout)

        self.balanceLayout = QHBoxLayout()
        self.balanceLayout.setSpacing(20)
        self.balanceLayout.setObjectName(u"balanceLayout")
        self.balanceLayout.setContentsMargins(0, 20, 0, 20)
        self.horizontalSpacer_2 = QSpacerItem(150, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)

        self.balanceLayout.addItem(self.horizontalSpacer_2)

        self.labelCashBalance = QLabel(self.centralwidget)
        self.labelCashBalance.setObjectName(u"labelCashBalance")
        font6 = QFont()
        font6.setPointSize(14)
        self.labelCashBalance.setFont(font6)

        self.balanceLayout.addWidget(self.labelCashBalance)

        self.editCashBalance = QLineEdit(self.centralwidget)
        self.editCashBalance.setObjectName(u"editCashBalance")
        self.editCashBalance.setMaximumSize(QSize(250, 16777215))
        font7 = QFont()
        font7.setPointSize(16)
        font7.setBold(True)
        self.editCashBalance.setFont(font7)
        self.editCashBalance.setFrame(False)
        self.editCashBalance.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.editCashBalance.setReadOnly(True)

        self.balanceLayout.addWidget(self.editCashBalance)

        self.horizontalSpacer_5 = QSpacerItem(40, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)

        self.balanceLayout.addItem(self.horizontalSpacer_5)

        self.labelBankBalance = QLabel(self.centralwidget)
        self.labelBankBalance.setObjectName(u"labelBankBalance")
        self.labelBankBalance.setFont(font6)

        self.balanceLayout.addWidget(self.labelBankBalance)

        self.editBankBalance = QLineEdit(self.centralwidget)
        self.editBankBalance.setObjectName(u"editBankBalance")
        self.editBankBalance.setMaximumSize(QSize(250, 16777215))
        self.editBankBalance.setFont(font7)
        self.editBankBalance.setFrame(False)
        self.editBankBalance.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.editBankBalance.setReadOnly(True)

        self.balanceLayout.addWidget(self.editBankBalance)

        self.horizontalSpacer = QSpacerItem(40, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)

        self.balanceLayout.addItem(self.horizontalSpacer)

        self.labelTotalBalance = QLabel(self.centralwidget)
        self.labelTotalBalance.setObjectName(u"labelTotalBalance")
        self.labelTotalBalance.setFont(font6)

        self.balanceLayout.addWidget(self.labelTotalBalance)

        self.editTotalBalance = QLineEdit(self.centralwidget)
        self.editTotalBalance.setObjectName(u"editTotalBalance")
        self.editTotalBalance.setMaximumSize(QSize(250, 16777215))
        self.editTotalBalance.setFont(font7)
        self.editTotalBalance.setFrame(False)
        self.editTotalBalance.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.editTotalBalance.setReadOnly(True)

        self.balanceLayout.addWidget(self.editTotalBalance)

        self.horizontalSpacer_6 = QSpacerItem(150, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)

        self.balanceLayout.addItem(self.horizontalSpacer_6)


        self.verticalLayout.addLayout(self.balanceLayout)

        HomeWindow.setCentralWidget(self.centralwidget)
        self.menubar = QMenuBar(HomeWindow)
        self.menubar.setObjectName(u"menubar")
        self.menubar.setGeometry(QRect(0, 0, 1782, 23))
        self.menubar.setStyleSheet(u"")
        self.menuFile = QMenu(self.menubar)
        self.menuFile.setObjectName(u"menuFile")
        self.menuFile.setStyleSheet(u"")
        self.menuAccount = QMenu(self.menubar)
        self.menuAccount.setObjectName(u"menuAccount")
        self.menuAccount.setStyleSheet(u"")
        self.menuHead = QMenu(self.menubar)
        self.menuHead.setObjectName(u"menuHead")
        self.menuReceipt = QMenu(self.menubar)
        self.menuReceipt.setObjectName(u"menuReceipt")
        self.menuUsers = QMenu(self.menubar)
        self.menuUsers.setObjectName(u"menuUsers")
        self.menuInitiaize = QMenu(self.menubar)
        self.menuInitiaize.setObjectName(u"menuInitiaize")
        self.menuPayment = QMenu(self.menubar)
        self.menuPayment.setObjectName(u"menuPayment")
        self.menuContraEntries = QMenu(self.menubar)
        self.menuContraEntries.setObjectName(u"menuContraEntries")
        HomeWindow.setMenuBar(self.menubar)
        self.statusbar = QStatusBar(HomeWindow)
        self.statusbar.setObjectName(u"statusbar")
        self.statusbar.setFont(font)
        HomeWindow.setStatusBar(self.statusbar)
        self.toolBar = QToolBar(HomeWindow)
        self.toolBar.setObjectName(u"toolBar")
        self.toolBar.setMovable(False)
        HomeWindow.addToolBar(Qt.TopToolBarArea, self.toolBar)
#if QT_CONFIG(shortcut)
        self.labelMonth.setBuddy(self.top_widget)
#endif // QT_CONFIG(shortcut)

        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuAccount.menuAction())
        self.menubar.addAction(self.menuHead.menuAction())
        self.menubar.addAction(self.menuReceipt.menuAction())
        self.menubar.addAction(self.menuPayment.menuAction())
        self.menubar.addAction(self.menuContraEntries.menuAction())
        self.menubar.addAction(self.menuUsers.menuAction())
        self.menubar.addAction(self.menuInitiaize.menuAction())
        self.menuFile.addAction(self.actionBasicDetails)
        self.menuFile.addAction(self.actionPeriodMismatch)
        self.menuFile.addAction(self.actionAccountBalance)
        self.menuFile.addAction(self.actionTransactions)
        self.menuFile.addAction(self.actionChangeImage)
        self.menuFile.addAction(self.actionAboutAppDev)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionExit)
        self.menuAccount.addAction(self.actionAddAccount)
        self.menuAccount.addAction(self.actionEditAccount)
        self.menuAccount.addAction(self.actionViewAccount)
        self.menuAccount.addSeparator()
        self.menuAccount.addAction(self.actionDeleteAccount)
        self.menuAccount.addSeparator()
        self.menuHead.addAction(self.actionAddHead)
        self.menuHead.addAction(self.actionEditHead)
        self.menuHead.addAction(self.actionViewHead)
        self.menuHead.addSeparator()
        self.menuHead.addAction(self.actionDeleteHead)
        self.menuHead.addSeparator()
        self.menuReceipt.addAction(self.actionAddReceipt)
        self.menuReceipt.addAction(self.actionEditReceipt)
        self.menuReceipt.addAction(self.actionViewReceipt)
        self.menuReceipt.addSeparator()
        self.menuReceipt.addAction(self.actionDeleteReceipt)
        self.menuReceipt.addSeparator()
        self.menuUsers.addSeparator()
        self.menuUsers.addAction(self.actionShowUsers)
        self.menuUsers.addAction(self.actionChangePassword)
        self.menuUsers.addAction(self.actionChangeUsername)
        self.menuInitiaize.addAction(self.actionInitialization)
        self.menuPayment.addAction(self.actionAddPayment)
        self.menuPayment.addAction(self.actionEditPayment)
        self.menuPayment.addAction(self.actionViewPayment)
        self.menuPayment.addSeparator()
        self.menuPayment.addAction(self.actionDeletePayment)
        self.menuContraEntries.addAction(self.actionViewReceiptContra)
        self.menuContraEntries.addAction(self.actionViewPaymentContra)
        self.menuContraEntries.addAction(self.actionViewAllContra)
        self.toolBar.addAction(self.actionInitialization)
        self.toolBar.addAction(self.actionShowUsers)
        self.toolBar.addAction(self.actionChangePassword)
        self.toolBar.addAction(self.actionChangeUsername)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionTransactions)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionAboutAppDev)
        self.toolBar.addAction(self.actionExit)

        self.retranslateUi(HomeWindow)
        self.actionTransactions.triggered.connect(HomeWindow.showTransactions)
        self.actionAboutAppDev.triggered.connect(HomeWindow.aboutAppDev)
        self.actionExit.triggered.connect(HomeWindow.close)
        self.actionAddAccount.triggered.connect(HomeWindow.addAccount)
        self.actionEditAccount.triggered.connect(HomeWindow.editAccount)
        self.actionDeleteAccount.triggered.connect(HomeWindow.deleteAccount)
        self.actionViewAccount.triggered.connect(HomeWindow.viewAccount)
        self.actionAddHead.triggered.connect(HomeWindow.addHead)
        self.actionEditHead.triggered.connect(HomeWindow.editHead)
        self.actionViewHead.triggered.connect(HomeWindow.viewHead)
        self.actionDeleteHead.triggered.connect(HomeWindow.deleteHead)
        self.actionAddReceipt.triggered.connect(HomeWindow.addReceipt)
        self.actionEditReceipt.triggered.connect(HomeWindow.editReceipt)
        self.actionViewReceipt.triggered.connect(HomeWindow.viewReceipt)
        self.actionAddPayment.triggered.connect(HomeWindow.addPayment)
        self.actionEditPayment.triggered.connect(HomeWindow.editPayment)
        self.actionDeletePayment.triggered.connect(HomeWindow.deletePayment)
        self.actionViewPayment.triggered.connect(HomeWindow.viewPayment)
        self.actionViewReceiptContra.triggered.connect(HomeWindow.viewReceiptContra)
        self.actionViewPaymentContra.triggered.connect(HomeWindow.viewPaymentContra)
        self.actionViewAllContra.triggered.connect(HomeWindow.viewAllContra)
        self.actionShowUsers.triggered.connect(HomeWindow.showUsers)
        self.actionChangePassword.triggered.connect(HomeWindow.changePassword)
        self.actionChangeUsername.triggered.connect(HomeWindow.changeUsername)
        self.actionInitialization.triggered.connect(HomeWindow.initializeData)
        self.actionDeleteReceipt.triggered.connect(HomeWindow.deleteReceipt)
        self.actionBasicDetails.triggered.connect(HomeWindow.editBasicDetails)
        self.actionAccountBalance.triggered.connect(HomeWindow.editAccountBalance)
        self.actionChangeImage.triggered.connect(HomeWindow.changeOwnerImage)
        self.actionPeriodMismatch.triggered.connect(HomeWindow.periodMismatch)

        QMetaObject.connectSlotsByName(HomeWindow)
    # setupUi

    def retranslateUi(self, HomeWindow):
        HomeWindow.setWindowTitle(QCoreApplication.translate("HomeWindow", u"Expense Tracker", None))
        self.actionExit.setText(QCoreApplication.translate("HomeWindow", u"E&xit", None))
#if QT_CONFIG(tooltip)
        self.actionExit.setToolTip(QCoreApplication.translate("HomeWindow", u"Quit application", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionExit.setStatusTip(QCoreApplication.translate("HomeWindow", u"Quit application", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.actionExit.setShortcut(QCoreApplication.translate("HomeWindow", u"Ctrl+X", None))
#endif // QT_CONFIG(shortcut)
        self.actionAddAccount.setText(QCoreApplication.translate("HomeWindow", u"&Add Account", None))
#if QT_CONFIG(tooltip)
        self.actionAddAccount.setToolTip(QCoreApplication.translate("HomeWindow", u"Add new bank account", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionAddAccount.setStatusTip(QCoreApplication.translate("HomeWindow", u"Add new bank account", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.actionAddAccount.setShortcut(QCoreApplication.translate("HomeWindow", u"Ctrl+Alt+A", None))
#endif // QT_CONFIG(shortcut)
        self.actionEditAccount.setText(QCoreApplication.translate("HomeWindow", u"&Edit Account", None))
#if QT_CONFIG(tooltip)
        self.actionEditAccount.setToolTip(QCoreApplication.translate("HomeWindow", u"Edit an existing bank account", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionEditAccount.setStatusTip(QCoreApplication.translate("HomeWindow", u"Edit an existing bank account", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.actionEditAccount.setShortcut(QCoreApplication.translate("HomeWindow", u"Ctrl+Alt+E", None))
#endif // QT_CONFIG(shortcut)
        self.actionViewAccount.setText(QCoreApplication.translate("HomeWindow", u"&View Account", None))
#if QT_CONFIG(tooltip)
        self.actionViewAccount.setToolTip(QCoreApplication.translate("HomeWindow", u"View existing  bank accounts", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionViewAccount.setStatusTip(QCoreApplication.translate("HomeWindow", u"View existing  bank accounts", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.actionViewAccount.setShortcut(QCoreApplication.translate("HomeWindow", u"Ctrl+Alt+V", None))
#endif // QT_CONFIG(shortcut)
        self.actionDeleteAccount.setText(QCoreApplication.translate("HomeWindow", u"&Delete Account", None))
#if QT_CONFIG(tooltip)
        self.actionDeleteAccount.setToolTip(QCoreApplication.translate("HomeWindow", u"Delete an existing bank account", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionDeleteAccount.setStatusTip(QCoreApplication.translate("HomeWindow", u"Delete an existing bank account", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.actionDeleteAccount.setShortcut(QCoreApplication.translate("HomeWindow", u"Ctrl+Alt+D", None))
#endif // QT_CONFIG(shortcut)
        self.actionAddHead.setText(QCoreApplication.translate("HomeWindow", u"&Add Head", None))
#if QT_CONFIG(tooltip)
        self.actionAddHead.setToolTip(QCoreApplication.translate("HomeWindow", u"Add new expenditure head", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionAddHead.setStatusTip(QCoreApplication.translate("HomeWindow", u"Add new expenditure head", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.actionAddHead.setShortcut(QCoreApplication.translate("HomeWindow", u"Ctrl+Shift+A", None))
#endif // QT_CONFIG(shortcut)
        self.actionEditHead.setText(QCoreApplication.translate("HomeWindow", u"&Edit Head", None))
#if QT_CONFIG(tooltip)
        self.actionEditHead.setToolTip(QCoreApplication.translate("HomeWindow", u"Edit an existing expenditure head", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionEditHead.setStatusTip(QCoreApplication.translate("HomeWindow", u"Edit an existing expenditure head", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.actionEditHead.setShortcut(QCoreApplication.translate("HomeWindow", u"Ctrl+Shift+E", None))
#endif // QT_CONFIG(shortcut)
        self.actionViewHead.setText(QCoreApplication.translate("HomeWindow", u"&View Head", None))
#if QT_CONFIG(tooltip)
        self.actionViewHead.setToolTip(QCoreApplication.translate("HomeWindow", u"View existing expenditure heads", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionViewHead.setStatusTip(QCoreApplication.translate("HomeWindow", u"View existing expenditure heads", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.actionViewHead.setShortcut(QCoreApplication.translate("HomeWindow", u"Ctrl+Shift+V", None))
#endif // QT_CONFIG(shortcut)
        self.actionDeleteHead.setText(QCoreApplication.translate("HomeWindow", u"&Delete Head", None))
#if QT_CONFIG(tooltip)
        self.actionDeleteHead.setToolTip(QCoreApplication.translate("HomeWindow", u"Delete an existing expenditure head", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionDeleteHead.setStatusTip(QCoreApplication.translate("HomeWindow", u"Delete an existing expenditure head", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.actionDeleteHead.setShortcut(QCoreApplication.translate("HomeWindow", u"Ctrl+Shift+D", None))
#endif // QT_CONFIG(shortcut)
        self.actionAddReceipt.setText(QCoreApplication.translate("HomeWindow", u"&Add Receipt", None))
#if QT_CONFIG(tooltip)
        self.actionAddReceipt.setToolTip(QCoreApplication.translate("HomeWindow", u"Add New Receipt", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionAddReceipt.setStatusTip(QCoreApplication.translate("HomeWindow", u"Add new transaction", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.actionAddReceipt.setShortcut(QCoreApplication.translate("HomeWindow", u"Shift+A", None))
#endif // QT_CONFIG(shortcut)
        self.actionEditReceipt.setText(QCoreApplication.translate("HomeWindow", u"&Edit Receipt", None))
#if QT_CONFIG(tooltip)
        self.actionEditReceipt.setToolTip(QCoreApplication.translate("HomeWindow", u"Edit an Existing Receipt", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionEditReceipt.setStatusTip(QCoreApplication.translate("HomeWindow", u"Edit an existing transaction", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.actionEditReceipt.setShortcut(QCoreApplication.translate("HomeWindow", u"Shift+E", None))
#endif // QT_CONFIG(shortcut)
        self.actionViewReceipt.setText(QCoreApplication.translate("HomeWindow", u"&View Receipts", None))
#if QT_CONFIG(tooltip)
        self.actionViewReceipt.setToolTip(QCoreApplication.translate("HomeWindow", u"View Receipt Transactions", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionViewReceipt.setStatusTip(QCoreApplication.translate("HomeWindow", u"View existing transactions", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.actionViewReceipt.setShortcut(QCoreApplication.translate("HomeWindow", u"Shift+V", None))
#endif // QT_CONFIG(shortcut)
        self.actionChangePassword.setText(QCoreApplication.translate("HomeWindow", u"&Change Password", None))
        self.actionChangePassword.setIconText(QCoreApplication.translate("HomeWindow", u"Change Password for active user", None))
#if QT_CONFIG(tooltip)
        self.actionChangePassword.setToolTip(QCoreApplication.translate("HomeWindow", u"Change Password for active user", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionChangePassword.setStatusTip(QCoreApplication.translate("HomeWindow", u"Change Password for active user", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.actionChangePassword.setShortcut(QCoreApplication.translate("HomeWindow", u"Ctrl+C", None))
#endif // QT_CONFIG(shortcut)
        self.actionTransactions.setText(QCoreApplication.translate("HomeWindow", u"&Transactions", None))
#if QT_CONFIG(tooltip)
        self.actionTransactions.setToolTip(QCoreApplication.translate("HomeWindow", u"View / Save / Print all transactions", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionTransactions.setStatusTip(QCoreApplication.translate("HomeWindow", u"Print existing expenditure", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.actionTransactions.setShortcut(QCoreApplication.translate("HomeWindow", u"Ctrl+T", None))
#endif // QT_CONFIG(shortcut)
        self.actionInitialization.setText(QCoreApplication.translate("HomeWindow", u"Data Initiali&zation", None))
#if QT_CONFIG(tooltip)
        self.actionInitialization.setToolTip(QCoreApplication.translate("HomeWindow", u"Delete all existing transactions", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionInitialization.setStatusTip(QCoreApplication.translate("HomeWindow", u"Delete all existing transactions", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.actionInitialization.setShortcut(QCoreApplication.translate("HomeWindow", u"Ctrl+Alt+Shift+Z", None))
#endif // QT_CONFIG(shortcut)
        self.actionDeleteReceipt.setText(QCoreApplication.translate("HomeWindow", u"&Delete Receipt", None))
#if QT_CONFIG(tooltip)
        self.actionDeleteReceipt.setToolTip(QCoreApplication.translate("HomeWindow", u"Delete an existing receipt transaction", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionDeleteReceipt.setStatusTip(QCoreApplication.translate("HomeWindow", u"Delete an existing transaction", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.actionDeleteReceipt.setShortcut(QCoreApplication.translate("HomeWindow", u"Shift+D", None))
#endif // QT_CONFIG(shortcut)
        self.actionAboutAppDev.setText(QCoreApplication.translate("HomeWindow", u"Abo&ut", None))
#if QT_CONFIG(tooltip)
        self.actionAboutAppDev.setToolTip(QCoreApplication.translate("HomeWindow", u"About the application and the developer", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionAboutAppDev.setStatusTip(QCoreApplication.translate("HomeWindow", u"About the application and the developer", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.actionAboutAppDev.setShortcut(QCoreApplication.translate("HomeWindow", u"Ctrl+U", None))
#endif // QT_CONFIG(shortcut)
        self.actionChangeUsername.setText(QCoreApplication.translate("HomeWindow", u"C&hange Username", None))
        self.actionChangeUsername.setIconText(QCoreApplication.translate("HomeWindow", u"Change Username for active user", None))
#if QT_CONFIG(tooltip)
        self.actionChangeUsername.setToolTip(QCoreApplication.translate("HomeWindow", u"Change Username for active user", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionChangeUsername.setStatusTip(QCoreApplication.translate("HomeWindow", u"Change Username for active user", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.actionChangeUsername.setShortcut(QCoreApplication.translate("HomeWindow", u"Ctrl+H", None))
#endif // QT_CONFIG(shortcut)
        self.actionShowUsers.setText(QCoreApplication.translate("HomeWindow", u"&Show Users", None))
#if QT_CONFIG(tooltip)
        self.actionShowUsers.setToolTip(QCoreApplication.translate("HomeWindow", u"Show all Users", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionShowUsers.setShortcut(QCoreApplication.translate("HomeWindow", u"Ctrl+S", None))
#endif // QT_CONFIG(shortcut)
        self.actionAddPayment.setText(QCoreApplication.translate("HomeWindow", u"&Add Payment", None))
#if QT_CONFIG(tooltip)
        self.actionAddPayment.setToolTip(QCoreApplication.translate("HomeWindow", u"Add New Payment", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionAddPayment.setShortcut(QCoreApplication.translate("HomeWindow", u"Ctrl+A", None))
#endif // QT_CONFIG(shortcut)
        self.actionEditPayment.setText(QCoreApplication.translate("HomeWindow", u"&Edit Payment", None))
#if QT_CONFIG(tooltip)
        self.actionEditPayment.setToolTip(QCoreApplication.translate("HomeWindow", u"Edit Existing Payment", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionEditPayment.setShortcut(QCoreApplication.translate("HomeWindow", u"Ctrl+E", None))
#endif // QT_CONFIG(shortcut)
        self.actionViewPayment.setText(QCoreApplication.translate("HomeWindow", u"&View Payment", None))
#if QT_CONFIG(tooltip)
        self.actionViewPayment.setToolTip(QCoreApplication.translate("HomeWindow", u"View All Payments", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionViewPayment.setShortcut(QCoreApplication.translate("HomeWindow", u"Ctrl+V", None))
#endif // QT_CONFIG(shortcut)
        self.actionDeletePayment.setText(QCoreApplication.translate("HomeWindow", u"&Delete Payment", None))
#if QT_CONFIG(tooltip)
        self.actionDeletePayment.setToolTip(QCoreApplication.translate("HomeWindow", u"Delete Existing Payment", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionDeletePayment.setShortcut(QCoreApplication.translate("HomeWindow", u"Ctrl+D", None))
#endif // QT_CONFIG(shortcut)
        self.actionViewReceiptContra.setText(QCoreApplication.translate("HomeWindow", u"&Receipt Contra Entries", None))
#if QT_CONFIG(tooltip)
        self.actionViewReceiptContra.setToolTip(QCoreApplication.translate("HomeWindow", u"<html><head/><body><p>View Reeipt contra entries</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionViewReceiptContra.setShortcut(QCoreApplication.translate("HomeWindow", u"Alt+R", None))
#endif // QT_CONFIG(shortcut)
        self.actionViewPaymentContra.setText(QCoreApplication.translate("HomeWindow", u"&Payment Contra Entries", None))
#if QT_CONFIG(tooltip)
        self.actionViewPaymentContra.setToolTip(QCoreApplication.translate("HomeWindow", u"<html><head/><body><p>View payment contra entries</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionViewPaymentContra.setShortcut(QCoreApplication.translate("HomeWindow", u"Alt+P", None))
#endif // QT_CONFIG(shortcut)
        self.actionViewAllContra.setText(QCoreApplication.translate("HomeWindow", u"&All Contra Entries", None))
#if QT_CONFIG(tooltip)
        self.actionViewAllContra.setToolTip(QCoreApplication.translate("HomeWindow", u"View all Contra Entries", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionViewAllContra.setShortcut(QCoreApplication.translate("HomeWindow", u"Alt+A", None))
#endif // QT_CONFIG(shortcut)
        self.actionBasicDetails.setText(QCoreApplication.translate("HomeWindow", u"&Basic Details", None))
#if QT_CONFIG(tooltip)
        self.actionBasicDetails.setToolTip(QCoreApplication.translate("HomeWindow", u"View/Edit Basic Details", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionBasicDetails.setShortcut(QCoreApplication.translate("HomeWindow", u"Ctrl+B", None))
#endif // QT_CONFIG(shortcut)
        self.actionAccountBalance.setText(QCoreApplication.translate("HomeWindow", u"Acc&ount Balance", None))
#if QT_CONFIG(tooltip)
        self.actionAccountBalance.setToolTip(QCoreApplication.translate("HomeWindow", u"View/Edit Account Balance", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionAccountBalance.setShortcut(QCoreApplication.translate("HomeWindow", u"Ctrl+O", None))
#endif // QT_CONFIG(shortcut)
        self.actionChangeImage.setText(QCoreApplication.translate("HomeWindow", u"Change I&mage", None))
#if QT_CONFIG(tooltip)
        self.actionChangeImage.setToolTip(QCoreApplication.translate("HomeWindow", u"<html><head/><body><p>Change user's image</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionChangeImage.setShortcut(QCoreApplication.translate("HomeWindow", u"Ctrl+M", None))
#endif // QT_CONFIG(shortcut)
        self.actionPeriodMismatch.setText(QCoreApplication.translate("HomeWindow", u"&Period Mismatch", None))
#if QT_CONFIG(shortcut)
        self.actionPeriodMismatch.setShortcut(QCoreApplication.translate("HomeWindow", u"Ctrl+P", None))
#endif // QT_CONFIG(shortcut)
        self.labelHeading.setText(QCoreApplication.translate("HomeWindow", u"Account of monthly expenditure for  ", None))
        self.labelOwner.setText(QCoreApplication.translate("HomeWindow", u"owner", None))
        self.labelAddress.setText(QCoreApplication.translate("HomeWindow", u"address", None))
        self.labelImage.setText("")
        self.labelMonth.setText(QCoreApplication.translate("HomeWindow", u"Month", None))
        self.labelYear.setText(QCoreApplication.translate("HomeWindow", u"Year", None))
        self.labelCashBalance.setText(QCoreApplication.translate("HomeWindow", u" Cash in Hand : ", None))
        self.editCashBalance.setText(QCoreApplication.translate("HomeWindow", u"0", None))
        self.labelBankBalance.setText(QCoreApplication.translate("HomeWindow", u"Cash at Bank :", None))
        self.editBankBalance.setText(QCoreApplication.translate("HomeWindow", u"0", None))
        self.labelTotalBalance.setText(QCoreApplication.translate("HomeWindow", u"Total Balance : ", None))
        self.editTotalBalance.setText(QCoreApplication.translate("HomeWindow", u"0", None))
        self.menuFile.setTitle(QCoreApplication.translate("HomeWindow", u"&File", None))
        self.menuAccount.setTitle(QCoreApplication.translate("HomeWindow", u"&Account", None))
        self.menuHead.setTitle(QCoreApplication.translate("HomeWindow", u"&Head", None))
        self.menuReceipt.setTitle(QCoreApplication.translate("HomeWindow", u"&Receipt", None))
        self.menuUsers.setTitle(QCoreApplication.translate("HomeWindow", u"&Users", None))
        self.menuInitiaize.setTitle(QCoreApplication.translate("HomeWindow", u"&Month End Action ", None))
        self.menuPayment.setTitle(QCoreApplication.translate("HomeWindow", u"&Payment", None))
        self.menuContraEntries.setTitle(QCoreApplication.translate("HomeWindow", u"&View Contra Entries", None))
        self.toolBar.setWindowTitle(QCoreApplication.translate("HomeWindow", u"toolBar", None))
    # retranslateUi

